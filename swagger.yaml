
securityDefinitions:
    api_key:
      type: "apiKey"
      name: "authorization"
      in: "header"
/posts:
    get:
      tags:
      - "Posts"
      summary: "Returns all post"
      description: Login to the application
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
              type: "object"
              additionalProperties:
                type: "integer"
                format: "int32"
      security:
        - api_key: []

#FILE API
/files/upload:
    post:
      tags:
      - "File"
      summary: Uploads a file.
      consumes:
      - "multipart/form-data"
      operationId: "fileUpload"
      produces:
      - "application/json"
      parameters:
      - name: "file_upload"
        in: "formData"
        description: "The file to upload."
        required: true
        type: "file"
      responses:
        "200":
          description: "Return access token"
          schema:
             type: "string"
          headers:
            authorization:
              type: "string"
              description: "Access token assigned on header"
        "400":
          description: "Invalid username/password supplied"

# USER API
/user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return access token"
          schema:
             type: "string"
          headers:
            authorization:
              type: "string"
              description: "Access token assigned on header"
        "400":
          description: "Invalid username/password supplied"

/user/register:
    post:
      tags:
      - "user"
      summary: "Register new user"
      description: ""
      operationId: "regiseterUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        description: "Register username "
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "Password user"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "Password user"
        required: true
        type: "string"
      - name: "email"
        in: "formData"
        description: "Email"
        required: true
        type: "string"
      - name: "role"
        in: "formData"
        description: "Role user"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "member"
          - "manager"
          - "admin"
          default: "member"
      - name: "displayname"
        in: "formData"
        description: "Display name"
        type: "string"
      - name: "phone_number"
        in: "formData"
        description: "Phone number user"
        type: "string"  
      responses:
        "200":
          description: "Return user's information"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Register Error" 

/user/profile:
    get:
      tags:
      - "user"
      summary: "Get information of current user"
      description: "Get information of current user"
      operationId: "profileUser"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "Return profle current user"
          schema:
             $ref: "#/definitions/User"
        "400":
          description: "Invalid Token" 
        "401":
          description: "Access Denied"  
      security:
        - api_key: []

/user/profile/update:
    put:
      tags:
      - "user"
      summary: "Update profile current user"
      description: "Update profile current userr"
      operationId: "updateProfileCurrentUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "displayname"
        in: "formData"
        description: "display name that need to be updated"
        type: "string"
      - name: "phone_number"
        in: "formData"
        description: "Phone number that need to be updated"
        type: "string"
      - name: "password"
        in: "formData"
        description: "password that need to be updated"
        type: "string"
      responses:
        "200":
          description: "Updating account successful"
          schema:
             type: "string"
             example: "Updating success"
        "400":
          description: "Invalid Token" 
        "401":
          description: "Access Denied"  
      security:
        - api_key: []

/user/listusers:
      get:
        tags:
        - "user"
        summary: " get list of all users"
        description: ""
        operationId: "getListUsers"
        produces:
        - "application/xml"
        - "application/json"
        responses:
            "200":
              description: "Return data all of users"
              schema:
                type: "array"
                items:
                  $ref: "#/definitions/User"
            "400":
              description: "Invalid Token" 
            "401":
              description: "Access Denied"  
            "403":
              description: "Access Forrbiden"  
        security:
          - api_key: []            

/user/refresh:
      post:
        tags:
        - "user"
        summary: "Refresh token"
        description: ""
        operationId: "refresh"
        produces:
        - "application/xml"
        - "application/json"
        parameters:
        - name: "refreshToken"
          in: "header"
          required: false
          description: "Refresh Token"
          type: "string"
        responses:
            "200":
              description: "Return new Access Token"
              schema:
                type: "string"
            "400":
              description: "Invalid Token" 
            "401":
              description: "Access Denied"  


definitions:
  User:
    type: "object"
    properties:
      _id:
        type: "object"
      email:
        type: "string"
      password:
        type: "string"
      displayname:
        type: "string"
      role:
        type: "string" 
      phone_number:
        type: "string"
      thumbnail_url:
        type: "string"
      date:
        type: "string"
    xml:
      name: "User"     
         

        
 